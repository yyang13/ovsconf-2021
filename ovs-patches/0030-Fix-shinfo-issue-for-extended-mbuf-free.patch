From 4fb26810b6bb98a1c64c465b600c356edaaa660f Mon Sep 17 00:00:00 2001
From: Yi Yang <yangyi01@inspur.com>
Date: Thu, 26 Nov 2020 20:29:23 -0500
Subject: [PATCH 30/47] Fix shinfo issue for extended mbuf free

Note: this resulted in free issue in openstack env.

Signed-off-by: Yi Yang <yangyi01@inspur.com>
---
 lib/netdev-dpdk.c | 11 +++--------
 1 file changed, 3 insertions(+), 8 deletions(-)

diff --git a/lib/netdev-dpdk.c b/lib/netdev-dpdk.c
index 8a1706965..639dd50b7 100644
--- a/lib/netdev-dpdk.c
+++ b/lib/netdev-dpdk.c
@@ -3418,7 +3418,7 @@ out:
  * netdev_dpdk_extbuf_free
  */
 static void
-netdev_dpdk_extbuf_free(struct rte_mbuf *m, void *opaque)
+netdev_dpdk_extbuf_free(void *addr OVS_UNUSED, void *opaque)
 {
     rte_free(opaque);
 }
@@ -3430,14 +3430,9 @@ dpdk_pktmbuf_attach_extbuf(struct rte_mbuf *pkt, uint32_t data_len)
     struct rte_mbuf_ext_shared_info *shinfo = NULL;
     uint16_t buf_len;
     void *buf;
-    struct shinfo_arg *arg;
 
-    if (rte_pktmbuf_tailroom(pkt) >= sizeof *shinfo) {
-        shinfo = rte_pktmbuf_mtod(pkt, struct rte_mbuf_ext_shared_info *);
-    } else {
-        total_len += sizeof *shinfo + sizeof(uintptr_t);
-        total_len = RTE_ALIGN_CEIL(total_len, sizeof(uintptr_t));
-    }
+    total_len += sizeof *shinfo + sizeof(uintptr_t);
+    total_len = RTE_ALIGN_CEIL(total_len, sizeof(uintptr_t));
 
     if (OVS_UNLIKELY(total_len > UINT16_MAX)) {
         VLOG_ERR("Can't copy packet: too big %u", total_len);
-- 
2.17.1


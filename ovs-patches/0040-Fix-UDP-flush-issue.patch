From 07fd76616212daf999ef51af666db798aca72a10 Mon Sep 17 00:00:00 2001
From: Yi Yang <yangyi01@inspur.com>
Date: Thu, 14 Jan 2021 01:59:38 -0500
Subject: [PATCH 40/47] Fix UDP flush issue

Note: old flush_timeout is so small that it is impossible
to reassemble out original UDP packet, big flush_timeout
can make sure we have enough time to wait for all UDP
fragments, it will be flushed once it is reassmbled
successfully, so big flush_timeout won't hurt performance,
it also won't waste reassembling buffer.

Of course, this depends on DPDK gro fix patch.

Signed-off-by: Yi Yang <yangyi01@inspur.com>
---
 lib/netdev-dpdk.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/lib/netdev-dpdk.c b/lib/netdev-dpdk.c
index 21f2f27f6..d055be015 100644
--- a/lib/netdev-dpdk.c
+++ b/lib/netdev-dpdk.c
@@ -3229,6 +3229,12 @@ netdev_dpdk_parse_hdr(struct dp_packet *pkt, int offset, uint16_t *l4_proto,
 
 static RTE_DEFINE_PER_LCORE(void *, _gro_ctx);
 
+/* UDP and VXLAN UDP reassemble flush timeout, about 1 ms
+ * for 2Ghz CPU core, rte_gro_timeout_flush will flush a flow
+ * if it has been expired or reassmbled successfully.
+ */
+#define UDP_FLUSH_CYCLES 2000000
+
 static int
 netdev_dpdk_rxq_recv(struct netdev_rxq *rxq, struct dp_packet_batch *batch,
                      int *qfill)
@@ -3337,7 +3343,8 @@ netdev_dpdk_rxq_recv(struct netdev_rxq *rxq, struct dp_packet_batch *batch,
             /* UDP packet must use heavy rte_gro_reassemble */
             nb_udp_rx = rte_gro_reassemble((struct rte_mbuf **) udp_pkts,
                                            nb_udp_rx, RTE_PER_LCORE(_gro_ctx));
-            nb_udp_rx += rte_gro_timeout_flush(RTE_PER_LCORE(_gro_ctx), 10000,
+            nb_udp_rx += rte_gro_timeout_flush(RTE_PER_LCORE(_gro_ctx),
+                              UDP_FLUSH_CYCLES,
                               RTE_GRO_UDP_IPV4
                                   | RTE_GRO_IPV4_VXLAN_UDP_IPV4
                                   | RTE_GRO_UDP_IPV6
-- 
2.17.1

